name: Build and Package ROS2 Iron Packages

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-22.04]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up ROS2 Iron
      run: |
        sudo apt update
        sudo apt install -y curl gnupg2 lsb-release
        sudo curl -sSL https://raw.githubusercontent.com/ros/rosdistro/master/ros.key | sudo apt-key add -
        sudo sh -c 'echo "deb http://packages.ros.org/ros2/ubuntu $(lsb_release -cs) main" > /etc/apt/sources.list.d/ros2-latest.list'
        sudo apt update
        sudo apt install -y ros-iron-ros-base python3-vcstool python3-colcon-common-extensions python3-rosdep

    - name: Set up ROS2 workspace and import packages
      run: |
        source /opt/ros/iron/setup.bash
        mkdir -p ~/ros2_ws/src
        cp source.repos ~/ros2_ws/
        cd ~/ros2_ws
        vcs import src < source.repos
        sudo rosdep init
        rosdep update
        rosdep install --from-paths src --ignore-src -r -y

    - name: Build ROS2 packages
      run: |
        source /opt/ros/iron/setup.bash
        cd ~/ros2_ws
        colcon build

    - name: Create deb package
      run: |
        cd ~/ros2_ws
        mkdir -p ~/ros2_deb_package/DEBIAN
        echo "Package: ros2-iron-packages" > ~/ros2_deb_package/DEBIAN/control
        echo "Version: 1.0" >> ~/ros2_deb_package/DEBIAN/control
        echo "Section: base" >> ~/ros2_deb_package/DEBIAN/control
        echo "Priority: optional" >> ~/ros2_deb_package/DEBIAN/control
        echo "Architecture: $(dpkg --print-architecture)" >> ~/ros2_deb_package/DEBIAN/control
        echo "Maintainer: Your Name <your.email@example.com>" >> ~/ros2_deb_package/DEBIAN/control
        echo "Description: ROS2 Iron packages" >> ~/ros2_deb_package/DEBIAN/control
        mkdir -p ~/ros2_deb_package/opt/ros2_ws
        cp -r install/* ~/ros2_deb_package/opt/ros2_ws/
        dpkg-deb --build ~/ros2_deb_package
        mv ~/ros2_deb_package.deb ros2-iron-packages-${{ matrix.os }}.deb

    - name: Create folder for deb packages if not exists
      run: mkdir -p ./deb-packages/${{ matrix.os }}

    - name: Move deb packages to folder
      run: mv ros2-iron-packages-${{ matrix.os }}.deb ./deb-packages/${{ matrix.os }}/

    - name: Upload deb packages folder
      uses: actions/upload-artifact@v2
      with:
        name: deb-packages-${{ matrix.os }}
        path: ./deb-packages/${{ matrix.os }}/
